% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggworldmap.R
\name{ggworldmap}
\alias{ggworldmap}
\title{Create a ggworldmap with graticules and degrees}
\usage{
ggworldmap(data = NULL, mapping = aes(x = long, y = lat), map = "world",
  proj = NULL, long_0 = 0, long_min = -180 + long_0, long_max = 180 +
  long_0, lat_min = -80, lat_max = 80, style = c("light"), ...,
  graticule = style, gratframe = style, degree = style, theme = style,
  environment = parent.frame())
}
\arguments{
\item{data}{Default dataset to use for plot. If not already a data.frame,
will be converted to one by \code{\link[=fortify]{fortify()}}. If not specified,
must be supplied in each layer added to the plot.}

\item{mapping}{Default list of aesthetic mappings to use for plot.
If not specified, must be supplied in each layer added to the plot.}

\item{proj}{A name of a cartographic projection or a complete proj4-string
specifying a transformation supported by the \href{http://proj4.org}{PROJ.4}
project.}

\item{long_0}{Latitude of the central meridian (added to the proj4-string as
`+lon_0=<long_0>`}

\item{long_min, long_max}{Longitude limits, defaults to ±180° from long_0.}

\item{lat_min, lat_max}{Latitude limits, defaults to ±80°.}

\item{style}{Default style for the map, graticules, degrees and the default
theme. Choices: "light"}

\item{...}{Other arguments passed on to [geom_worldmap]}

\item{graticule}{Style and arguments passed on to [geom_graticule]. Either a
single style string, a list of args with the style as first argument, or NULL
to disable graticules.}

\item{gratframe}{Style and arguments passed on to [geom_gratframe]. Either a
single style string, a list of args with the style as first argument, or NULL
to disable a gratiframe.}

\item{degree}{Style and arguments passed on to [geom_degree]. Either a single
style string, a list of args with the style as first argument, or NULL to
disable degrees.}

\item{theme}{Style and arguments passed on to `theme_worldmap_<style>`
themes. Either a single style string, a list of args with the style as first
argument, or NULL to disable a default theme.}

\item{environment}{If a variable defined in the aesthetic mapping is not
found in the data, ggplot will look for it in this environment. It defaults
to using the environment in which \code{ggplot()} is called.}
}
\value{
ggplot object
}
\description{
`ggworldmap()` is a short cut to create a [ggplot2::ggplot] with polygons of
a world map polygons, graticules and degree labels. It also adds a customized
theme and a fixed aspect ratio coordinate system ([ggplot2::coord_equal]).
}
\details{
`lat_min/lat_max` default to 80°S/W, respectively. This is mainly because the
polygon map that comes with ggplot2 only covers that range. Also, in most
projections, those extreme latitudes are heavily distorted and plotting them
doesn't make sense anyway.
}
\examples{
# a nice map with graticules and degree labels
ggworldmap()

# is short for
ggplot() +
  geom_worldmap(color = "gray90", fill = "gray90") +
  geom_graticule(color = "gray80") +
  geom_gratframe(color = "gray80") +
  geom_degree(color = "gray80") +
  theme_worldmap_light() +
  coord_equal()

# map in azimuthal orthogonal projection with degree labels disabled
ggworldmap(proj = "ortho", long_0 = 90, long_min = 0, long_max = 180,
  degree = NULL)

# map in Mercartor projection and with customized degree labels
ggworldmap(
  proj = "merc", lat_min = -75, lat_max = 75,
  graticule = list("light", size=.3, lat_by = 10),
  degree = list("light", lat_min = -70, lat_max = 70,
    lat_by = 10, lat_hjust = "inward", lat_vjust = "outward",
    lat_nudge_x = 30, lat_nudge_y = 2, long_min = -150,
    long_max = 150, long_hjust = "outward", long_nudge_x = 1,
    long_nudge_y = 11))

# Pacific centered map in Robinson projection colored by countries
ggworldmap(
  proj = "robin", long_0 = -150, lat_min = -75, lat_max = 75,
  mapping = aes(fill=region), color = "black", show.legend = FALSE,
  graticule = list("light", color = "grey40"),
  degree = list("light", color = "grey30",
    family = "Times New Roman"))

# The Pacific Ring of Fire
data(volcanic_eruptions)            # load example data
proj <- "robin"                     # Robinson projection
long_0 <- -150                      # Center on Pacific
ve_proj <- volcanic_eruptions \%>\%
  project(proj, long_0) \%>\%         # project data
  arrange(desc(VEI))                # and get nice plotting order
# plot projected map and data
ggworldmap(ve_proj, long_0 = long_0, proj = proj) +
  geom_point(aes(size = VEI^4, color = VEI), alpha =.5) +
  scale_color_distiller(palette = "Spectral")

}
